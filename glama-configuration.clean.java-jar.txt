GLAMA.AI TWITCH MCP SERVER CONFIGURATION (RUN JAVA DIRECTLY)
===========================================================

BUILD STEPS (JSON Array):
[
  "apt-get update",
  "apt-get install -y --no-install-recommends ca-certificates curl gnupg git maven wget",
  "wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | gpg --dearmor | tee /usr/share/keyrings/adoptium.gpg >/dev/null",
  "echo \"deb [signed-by=/usr/share/keyrings/adoptium.gpg] https://packages.adoptium.net/artifactory/deb $(. /etc/os-release; echo $VERSION_CODENAME) main\" > /etc/apt/sources.list.d/adoptium.list",
  "apt-get update && apt-get install -y --no-install-recommends temurin-21-jdk",
  "rm -f src/main/java/be/tomcools/twitchmcp/api/ChatResource.java || true",
  "mvn -B -DskipTests package",
  "bash -lc 'set -e; JAR=$(ls -1 target/*-runner.jar 2>/dev/null || ls -1 target/*-runner-*.jar 2>/dev/null || ls -1 target/*-all.jar 2>/dev/null || ls -1 target/*SNAPSHOT*.jar 2>/dev/null | head -n1); if [ -z \"$JAR\" ]; then echo Could not find built jar in target/ >&2; exit 1; fi; cp \"$JAR\" server.jar'",
  "apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
]

CMD ARGUMENTS (JSON Array):
["java", "-jar", "server.jar"]

PLACEHOLDER PARAMETERS (JSON Object):
{
  "TWITCH_CHANNEL": "test_channel",
  "TWITCH_AUTH": "oauth:test_token",
  "TWITCH_CLIENT_ID": "test_client_id",
  "TWITCH_BROADCASTER_ID": "test_broadcaster_id"
}

NOTES:
- This avoids Node entirely; Glama will wrap your command with mcp-proxy. The Java server communicates over stdio via quarkus-mcp-server-stdio.
- Twitch configuration is read from environment variables (see `src/main/resources/application.properties`).
