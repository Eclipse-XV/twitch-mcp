### Running with Docker

You can run Twitch MCP Server and its Node.js and Java components using Docker for easy deployment and isolation. The provided Dockerfiles and Docker Compose setup ensure all dependencies (Node.js 22+, Java 11+/17) are included.

#### Requirements
- Docker and Docker Compose installed on your system
- A valid Twitch config file (see above for format and location)

#### Services
- **js-twitch-mcp-npm**: Node.js 22.13.1 (slim), includes OpenJDK 11 for Java integration. No ports exposed (intended for stdio/AI tool integration).
- **java-twitchmcp**: Java 17 (Eclipse Temurin), exposes port **8080** (Quarkus default).

#### Build and Run
From the project root, run:
```sh
docker compose up --build
```
This will build and start both services as defined in the `docker-compose.yml`.

#### Configuration
- Place your `config.json` in the appropriate location inside the container, or mount it as a volume if needed. By default, the containers expect the config file in the same path as described above for your OS.
- No environment variables are required by default, but you can use an `.env` file if you wish to override settings (see commented `env_file` lines in the compose file).

#### Ports
- `java-twitchmcp` exposes **8080** (mapped to host 8080 by default).
- `js-twitch-mcp-npm` does **not** expose any ports (communicates via stdio for AI tool integration).

#### Notes
- Both services run as non-root users inside their containers for security.
- No external databases or persistent volumes are required.
- For advanced Docker usage or custom builds (e.g., Quarkus native), see [README_DEVELOPERS.md](README_DEVELOPERS.md).
